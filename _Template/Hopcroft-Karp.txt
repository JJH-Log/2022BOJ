/*============================================
Implementation of Manacher
Author : ReneCantata
Date : 2022-03-16

Description
Hopcroft-Karp Bipartite Matching
============================================*/

int N, M, p[MAXN], q[MAXN], rn[MAXN];
bool used[MAXN];
vector<int> w[MAXN];

void bfsRank() {
	queue<int> Q;
	for (int i = 0; i < N; i++) {
		if (!used[i]) Q.push(i);
		rn[i] = used[i] ? 1e9 : 0;
	}
	while (!Q.empty()) {
		int now = Q.front();  Q.pop();
		for (int tar : w[now]) {
			int next = q[tar];
			if (next != -1 && rn[next] == 1e9) {
				rn[next] = rn[now] + 1;
				Q.push(next);
			}
		}
	}
}

bool bipartite(int now) {
	for (int tar : w[now]) {
		int next = q[tar];
		if (next == -1 || (rn[next] == rn[now] + 1 && bipartite(next))) {
			used[now] = true;
			p[now] = tar;
			q[tar] = now;
			return true;
		}
	}
	return false;
}

int solve() {
	int res = 0;
	memset(p, -1, sizeof p);
	memset(q, -1, sizeof q);
	while (true) {
		bfsRank();
		int cnt = 0;
		for (int i = 0; i < N; i++) if (!used[i] && bipartite(i)) cnt++;
		if (!cnt) break;
		res += cnt;
	}
	return res;
}