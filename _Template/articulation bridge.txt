vector<vector<int>> w;
vector<int> dn;
vector<pair<int, int>> cutLine;
int dfsn;

//인접행렬 w을 바탕으로 생성된 단절선을 정점 {p , q} 의 형태로 cutLine에 저장 
int dfsCutLine(int now, int parent) {
    /*============================================
    vector<vector<int>> w : adj graph (init with size : N)
    vector<int> dn : check for dfsn (init with value : 0)
    vector<pair<int,int>> cutLine : check for Articulation Line
    int dfsn : dfs number (init with value : 0)
    ============================================*/
    int next, ans, FLAG;
    dn[now] = ++dfsn;
    FLAG = dn[now];
    for (int i = 0; i < w[now].size(); i++) {
        next = w[now][i];
        if (parent == next) continue;
        if (dn[next]) FLAG = min(FLAG, dn[next]);
        else {
            ans = dfsCutLine(next, now);
            if (ans > dn[now]) cutLine.push_back({ min(now, next), max(now, next) });
            FLAG = min(FLAG, ans);
        }
    }
    return FLAG;
}